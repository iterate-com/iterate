name: run evals
on:
  push:
    branches: ["**/*eval*", "*eval*"]

permissions:
  contents: read
  deployments: write
env:
  DOPPLER_TOKEN: ${{ secrets.DOPPLER_TOKEN }}

jobs:
  run:
    runs-on: "${{ github.repository_owner == 'iterate-com' && 'depot-ubuntu-24.04-arm-4' || 'ubuntu-24.04' }}"
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 24
          cache: "pnpm"
      - run: pnpm install
      - name: Install Doppler CLI
        uses: dopplerhq/cli-action@v2
      - name: Setup Doppler
        run: doppler setup --config dev --project os
      - name: run dependencies
        run: pnpm docker:up
      - name: migrate db
        uses: nick-fields/retry@v3
        with:
          timeout_seconds: 30
          max_attempts: 10
          retry_wait_seconds: 5
          command: pnpm db:migrate
      - name: get rid of ngrok # only needed for webhooks and not available in CI
        run: rm packages/ngrok/package.json
      - name: run os preview
        working-directory: apps/os
        run: |
          doppler run -- pnpm preview &
          echo '
            const main = async () => {
              for (let i = 0; i < 120; i++) {
                try {
                  const res = await fetch("http://localhost:5173");
                  if (!res.ok) throw new Error("Preview not ready");
                  console.log("Preview ready");
                  return;
                } catch (error) {
                  console.log(`Preview not ready, retrying ${i + 1}/120`);
                  await new Promise(resolve => setTimeout(resolve, 1000));
                }
              }
              throw new Error("Preview not ready");
            }
            await main();
          ' > fetch.mjs
          node fetch.mjs
      - name: run evals
        run: doppler run -- pnpm evalite | tee $GITHUB_STEP_SUMMARY
        working-directory: apps/os
